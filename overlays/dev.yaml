apiVersion: v1
kind: Namespace
metadata:
  name: dev
---
apiVersion: v1
data:
  password: QXplcnR5QDEy
kind: Secret
metadata:
  name: postgres-password-7t5985677g
  namespace: dev
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    run: adminer
  name: adminer
  namespace: dev
spec:
  ports:
  - nodePort: 30090
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: adminer
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: postgresql
  name: postgres-svc
  namespace: dev
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: transactions
  name: transactions
  namespace: dev
spec:
  ports:
  - nodePort: 30080
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: transactions
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgresql
  name: postgresql
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgres-password-7t5985677g
        image: postgres:14.2
        name: db
        ports:
        - containerPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: transactions
  name: transactions
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: transactions
  template:
    metadata:
      labels:
        app: transactions
    spec:
      containers:
      - env:
        - name: DATASOURCE_URL
          value: jdbc:postgresql://postgres-svc:5432/postgres
        - name: DATASOURCE_USERNAME
          value: postgres
        - name: DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgres-password-7t5985677g
        image: mmkmou/transactions
        name: transactions
      initContainers:
      - command:
        - sh
        - -c
        - until nslookup postgres-svc.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local;
          do echo en attente de postgres-svc; sleep 2; done
        image: busybox
        name: wait-db-svc-up
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    run: adminer
  name: adminer
  namespace: dev
spec:
  containers:
  - env:
    - name: ADMINER_DEFAULT_SERVER
      value: postgres-svc
    image: adminer
    name: adminer
