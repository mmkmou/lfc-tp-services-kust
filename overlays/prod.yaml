apiVersion: v1
kind: Namespace
metadata:
  name: production
---
apiVersion: v1
data:
  password: U3BoQW5EVW9TdE9D
kind: Secret
metadata:
  name: postgres-password-t8m4hgghd7
  namespace: production
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: postgresql
  name: postgres-svc
  namespace: production
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: transactions
  name: transactions
  namespace: production
spec:
  ports:
  - nodePort: 30080
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: transactions
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgresql
  name: postgresql
  namespace: production
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgres-password-t8m4hgghd7
        image: postgres:14.2
        name: db
        ports:
        - containerPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: transactions
  name: transactions
  namespace: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: transactions
  template:
    metadata:
      labels:
        app: transactions
    spec:
      containers:
      - env:
        - name: DATASOURCE_URL
          value: jdbc:postgresql://postgres-svc:5432/postgres
        - name: DATASOURCE_USERNAME
          value: postgres
        - name: DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: postgres-password-t8m4hgghd7
        image: mmkmou/transactions
        name: transactions
      initContainers:
      - command:
        - sh
        - -c
        - until nslookup postgres-svc.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local;
          do echo en attente de postgres-svc; sleep 2; done
        image: busybox
        name: wait-db-svc-up
